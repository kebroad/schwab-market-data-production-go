/*
Market Data

Trader API - Market data

API version: 1.0.0
Contact: TraderAPI@Schwab.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the QuoteEquity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuoteEquity{}

// QuoteEquity Quote data of Equity security
type QuoteEquity struct {
	// Higest price traded in the past 12 months, or 52 weeks
	Var52WeekHigh *float64 `json:"52WeekHigh,omitempty"`
	// Lowest price traded in the past 12 months, or 52 weeks
	Var52WeekLow *float64 `json:"52WeekLow,omitempty"`
	// ask MIC code
	AskMICId *string `json:"askMICId,omitempty"`
	// Current Best Ask Price
	AskPrice *float64 `json:"askPrice,omitempty"`
	// Number of shares for ask
	AskSize *int32 `json:"askSize,omitempty"`
	// Last ask time in milliseconds since Epoch
	AskTime *int64 `json:"askTime,omitempty"`
	// bid MIC code
	BidMICId *string `json:"bidMICId,omitempty"`
	// Current Best Bid Price
	BidPrice *float64 `json:"bidPrice,omitempty"`
	// Number of shares for bid
	BidSize *int32 `json:"bidSize,omitempty"`
	// Last bid time in milliseconds since Epoch
	BidTime *int64 `json:"bidTime,omitempty"`
	// Previous day's closing price
	ClosePrice *float64 `json:"closePrice,omitempty"`
	// Day's high trade price
	HighPrice *float64 `json:"highPrice,omitempty"`
	// Last MIC Code
	LastMICId *string `json:"lastMICId,omitempty"`
	LastPrice *float64 `json:"lastPrice,omitempty"`
	// Number of shares traded with last trade
	LastSize *int32 `json:"lastSize,omitempty"`
	// Day's low trade price
	LowPrice *float64 `json:"lowPrice,omitempty"`
	// Mark price
	Mark *float64 `json:"mark,omitempty"`
	// Mark Price change
	MarkChange *float64 `json:"markChange,omitempty"`
	// Mark Price percent change
	MarkPercentChange *float64 `json:"markPercentChange,omitempty"`
	// Current Last-Prev Close
	NetChange *float64 `json:"netChange,omitempty"`
	// Net Percentage Change
	NetPercentChange *float64 `json:"netPercentChange,omitempty"`
	// Price at market open
	OpenPrice *float64 `json:"openPrice,omitempty"`
	// Last quote time in milliseconds since Epoch
	QuoteTime *int64 `json:"quoteTime,omitempty"`
	// Status of security
	SecurityStatus *string `json:"securityStatus,omitempty"`
	// Aggregated shares traded throughout the day, including pre/post market hours.
	TotalVolume *int64 `json:"totalVolume,omitempty"`
	// Last trade time in milliseconds since Epoch
	TradeTime *int64 `json:"tradeTime,omitempty"`
	// Option Risk/Volatility Measurement
	Volatility *float64 `json:"volatility,omitempty"`
}

// NewQuoteEquity instantiates a new QuoteEquity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuoteEquity() *QuoteEquity {
	this := QuoteEquity{}
	return &this
}

// NewQuoteEquityWithDefaults instantiates a new QuoteEquity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuoteEquityWithDefaults() *QuoteEquity {
	this := QuoteEquity{}
	return &this
}

// GetVar52WeekHigh returns the Var52WeekHigh field value if set, zero value otherwise.
func (o *QuoteEquity) GetVar52WeekHigh() float64 {
	if o == nil || IsNil(o.Var52WeekHigh) {
		var ret float64
		return ret
	}
	return *o.Var52WeekHigh
}

// GetVar52WeekHighOk returns a tuple with the Var52WeekHigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteEquity) GetVar52WeekHighOk() (*float64, bool) {
	if o == nil || IsNil(o.Var52WeekHigh) {
		return nil, false
	}
	return o.Var52WeekHigh, true
}

// HasVar52WeekHigh returns a boolean if a field has been set.
func (o *QuoteEquity) HasVar52WeekHigh() bool {
	if o != nil && !IsNil(o.Var52WeekHigh) {
		return true
	}

	return false
}

// SetVar52WeekHigh gets a reference to the given float64 and assigns it to the Var52WeekHigh field.
func (o *QuoteEquity) SetVar52WeekHigh(v float64) {
	o.Var52WeekHigh = &v
}

// GetVar52WeekLow returns the Var52WeekLow field value if set, zero value otherwise.
func (o *QuoteEquity) GetVar52WeekLow() float64 {
	if o == nil || IsNil(o.Var52WeekLow) {
		var ret float64
		return ret
	}
	return *o.Var52WeekLow
}

// GetVar52WeekLowOk returns a tuple with the Var52WeekLow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteEquity) GetVar52WeekLowOk() (*float64, bool) {
	if o == nil || IsNil(o.Var52WeekLow) {
		return nil, false
	}
	return o.Var52WeekLow, true
}

// HasVar52WeekLow returns a boolean if a field has been set.
func (o *QuoteEquity) HasVar52WeekLow() bool {
	if o != nil && !IsNil(o.Var52WeekLow) {
		return true
	}

	return false
}

// SetVar52WeekLow gets a reference to the given float64 and assigns it to the Var52WeekLow field.
func (o *QuoteEquity) SetVar52WeekLow(v float64) {
	o.Var52WeekLow = &v
}

// GetAskMICId returns the AskMICId field value if set, zero value otherwise.
func (o *QuoteEquity) GetAskMICId() string {
	if o == nil || IsNil(o.AskMICId) {
		var ret string
		return ret
	}
	return *o.AskMICId
}

// GetAskMICIdOk returns a tuple with the AskMICId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteEquity) GetAskMICIdOk() (*string, bool) {
	if o == nil || IsNil(o.AskMICId) {
		return nil, false
	}
	return o.AskMICId, true
}

// HasAskMICId returns a boolean if a field has been set.
func (o *QuoteEquity) HasAskMICId() bool {
	if o != nil && !IsNil(o.AskMICId) {
		return true
	}

	return false
}

// SetAskMICId gets a reference to the given string and assigns it to the AskMICId field.
func (o *QuoteEquity) SetAskMICId(v string) {
	o.AskMICId = &v
}

// GetAskPrice returns the AskPrice field value if set, zero value otherwise.
func (o *QuoteEquity) GetAskPrice() float64 {
	if o == nil || IsNil(o.AskPrice) {
		var ret float64
		return ret
	}
	return *o.AskPrice
}

// GetAskPriceOk returns a tuple with the AskPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteEquity) GetAskPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.AskPrice) {
		return nil, false
	}
	return o.AskPrice, true
}

// HasAskPrice returns a boolean if a field has been set.
func (o *QuoteEquity) HasAskPrice() bool {
	if o != nil && !IsNil(o.AskPrice) {
		return true
	}

	return false
}

// SetAskPrice gets a reference to the given float64 and assigns it to the AskPrice field.
func (o *QuoteEquity) SetAskPrice(v float64) {
	o.AskPrice = &v
}

// GetAskSize returns the AskSize field value if set, zero value otherwise.
func (o *QuoteEquity) GetAskSize() int32 {
	if o == nil || IsNil(o.AskSize) {
		var ret int32
		return ret
	}
	return *o.AskSize
}

// GetAskSizeOk returns a tuple with the AskSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteEquity) GetAskSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.AskSize) {
		return nil, false
	}
	return o.AskSize, true
}

// HasAskSize returns a boolean if a field has been set.
func (o *QuoteEquity) HasAskSize() bool {
	if o != nil && !IsNil(o.AskSize) {
		return true
	}

	return false
}

// SetAskSize gets a reference to the given int32 and assigns it to the AskSize field.
func (o *QuoteEquity) SetAskSize(v int32) {
	o.AskSize = &v
}

// GetAskTime returns the AskTime field value if set, zero value otherwise.
func (o *QuoteEquity) GetAskTime() int64 {
	if o == nil || IsNil(o.AskTime) {
		var ret int64
		return ret
	}
	return *o.AskTime
}

// GetAskTimeOk returns a tuple with the AskTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteEquity) GetAskTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.AskTime) {
		return nil, false
	}
	return o.AskTime, true
}

// HasAskTime returns a boolean if a field has been set.
func (o *QuoteEquity) HasAskTime() bool {
	if o != nil && !IsNil(o.AskTime) {
		return true
	}

	return false
}

// SetAskTime gets a reference to the given int64 and assigns it to the AskTime field.
func (o *QuoteEquity) SetAskTime(v int64) {
	o.AskTime = &v
}

// GetBidMICId returns the BidMICId field value if set, zero value otherwise.
func (o *QuoteEquity) GetBidMICId() string {
	if o == nil || IsNil(o.BidMICId) {
		var ret string
		return ret
	}
	return *o.BidMICId
}

// GetBidMICIdOk returns a tuple with the BidMICId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteEquity) GetBidMICIdOk() (*string, bool) {
	if o == nil || IsNil(o.BidMICId) {
		return nil, false
	}
	return o.BidMICId, true
}

// HasBidMICId returns a boolean if a field has been set.
func (o *QuoteEquity) HasBidMICId() bool {
	if o != nil && !IsNil(o.BidMICId) {
		return true
	}

	return false
}

// SetBidMICId gets a reference to the given string and assigns it to the BidMICId field.
func (o *QuoteEquity) SetBidMICId(v string) {
	o.BidMICId = &v
}

// GetBidPrice returns the BidPrice field value if set, zero value otherwise.
func (o *QuoteEquity) GetBidPrice() float64 {
	if o == nil || IsNil(o.BidPrice) {
		var ret float64
		return ret
	}
	return *o.BidPrice
}

// GetBidPriceOk returns a tuple with the BidPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteEquity) GetBidPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.BidPrice) {
		return nil, false
	}
	return o.BidPrice, true
}

// HasBidPrice returns a boolean if a field has been set.
func (o *QuoteEquity) HasBidPrice() bool {
	if o != nil && !IsNil(o.BidPrice) {
		return true
	}

	return false
}

// SetBidPrice gets a reference to the given float64 and assigns it to the BidPrice field.
func (o *QuoteEquity) SetBidPrice(v float64) {
	o.BidPrice = &v
}

// GetBidSize returns the BidSize field value if set, zero value otherwise.
func (o *QuoteEquity) GetBidSize() int32 {
	if o == nil || IsNil(o.BidSize) {
		var ret int32
		return ret
	}
	return *o.BidSize
}

// GetBidSizeOk returns a tuple with the BidSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteEquity) GetBidSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.BidSize) {
		return nil, false
	}
	return o.BidSize, true
}

// HasBidSize returns a boolean if a field has been set.
func (o *QuoteEquity) HasBidSize() bool {
	if o != nil && !IsNil(o.BidSize) {
		return true
	}

	return false
}

// SetBidSize gets a reference to the given int32 and assigns it to the BidSize field.
func (o *QuoteEquity) SetBidSize(v int32) {
	o.BidSize = &v
}

// GetBidTime returns the BidTime field value if set, zero value otherwise.
func (o *QuoteEquity) GetBidTime() int64 {
	if o == nil || IsNil(o.BidTime) {
		var ret int64
		return ret
	}
	return *o.BidTime
}

// GetBidTimeOk returns a tuple with the BidTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteEquity) GetBidTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.BidTime) {
		return nil, false
	}
	return o.BidTime, true
}

// HasBidTime returns a boolean if a field has been set.
func (o *QuoteEquity) HasBidTime() bool {
	if o != nil && !IsNil(o.BidTime) {
		return true
	}

	return false
}

// SetBidTime gets a reference to the given int64 and assigns it to the BidTime field.
func (o *QuoteEquity) SetBidTime(v int64) {
	o.BidTime = &v
}

// GetClosePrice returns the ClosePrice field value if set, zero value otherwise.
func (o *QuoteEquity) GetClosePrice() float64 {
	if o == nil || IsNil(o.ClosePrice) {
		var ret float64
		return ret
	}
	return *o.ClosePrice
}

// GetClosePriceOk returns a tuple with the ClosePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteEquity) GetClosePriceOk() (*float64, bool) {
	if o == nil || IsNil(o.ClosePrice) {
		return nil, false
	}
	return o.ClosePrice, true
}

// HasClosePrice returns a boolean if a field has been set.
func (o *QuoteEquity) HasClosePrice() bool {
	if o != nil && !IsNil(o.ClosePrice) {
		return true
	}

	return false
}

// SetClosePrice gets a reference to the given float64 and assigns it to the ClosePrice field.
func (o *QuoteEquity) SetClosePrice(v float64) {
	o.ClosePrice = &v
}

// GetHighPrice returns the HighPrice field value if set, zero value otherwise.
func (o *QuoteEquity) GetHighPrice() float64 {
	if o == nil || IsNil(o.HighPrice) {
		var ret float64
		return ret
	}
	return *o.HighPrice
}

// GetHighPriceOk returns a tuple with the HighPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteEquity) GetHighPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.HighPrice) {
		return nil, false
	}
	return o.HighPrice, true
}

// HasHighPrice returns a boolean if a field has been set.
func (o *QuoteEquity) HasHighPrice() bool {
	if o != nil && !IsNil(o.HighPrice) {
		return true
	}

	return false
}

// SetHighPrice gets a reference to the given float64 and assigns it to the HighPrice field.
func (o *QuoteEquity) SetHighPrice(v float64) {
	o.HighPrice = &v
}

// GetLastMICId returns the LastMICId field value if set, zero value otherwise.
func (o *QuoteEquity) GetLastMICId() string {
	if o == nil || IsNil(o.LastMICId) {
		var ret string
		return ret
	}
	return *o.LastMICId
}

// GetLastMICIdOk returns a tuple with the LastMICId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteEquity) GetLastMICIdOk() (*string, bool) {
	if o == nil || IsNil(o.LastMICId) {
		return nil, false
	}
	return o.LastMICId, true
}

// HasLastMICId returns a boolean if a field has been set.
func (o *QuoteEquity) HasLastMICId() bool {
	if o != nil && !IsNil(o.LastMICId) {
		return true
	}

	return false
}

// SetLastMICId gets a reference to the given string and assigns it to the LastMICId field.
func (o *QuoteEquity) SetLastMICId(v string) {
	o.LastMICId = &v
}

// GetLastPrice returns the LastPrice field value if set, zero value otherwise.
func (o *QuoteEquity) GetLastPrice() float64 {
	if o == nil || IsNil(o.LastPrice) {
		var ret float64
		return ret
	}
	return *o.LastPrice
}

// GetLastPriceOk returns a tuple with the LastPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteEquity) GetLastPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.LastPrice) {
		return nil, false
	}
	return o.LastPrice, true
}

// HasLastPrice returns a boolean if a field has been set.
func (o *QuoteEquity) HasLastPrice() bool {
	if o != nil && !IsNil(o.LastPrice) {
		return true
	}

	return false
}

// SetLastPrice gets a reference to the given float64 and assigns it to the LastPrice field.
func (o *QuoteEquity) SetLastPrice(v float64) {
	o.LastPrice = &v
}

// GetLastSize returns the LastSize field value if set, zero value otherwise.
func (o *QuoteEquity) GetLastSize() int32 {
	if o == nil || IsNil(o.LastSize) {
		var ret int32
		return ret
	}
	return *o.LastSize
}

// GetLastSizeOk returns a tuple with the LastSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteEquity) GetLastSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.LastSize) {
		return nil, false
	}
	return o.LastSize, true
}

// HasLastSize returns a boolean if a field has been set.
func (o *QuoteEquity) HasLastSize() bool {
	if o != nil && !IsNil(o.LastSize) {
		return true
	}

	return false
}

// SetLastSize gets a reference to the given int32 and assigns it to the LastSize field.
func (o *QuoteEquity) SetLastSize(v int32) {
	o.LastSize = &v
}

// GetLowPrice returns the LowPrice field value if set, zero value otherwise.
func (o *QuoteEquity) GetLowPrice() float64 {
	if o == nil || IsNil(o.LowPrice) {
		var ret float64
		return ret
	}
	return *o.LowPrice
}

// GetLowPriceOk returns a tuple with the LowPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteEquity) GetLowPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.LowPrice) {
		return nil, false
	}
	return o.LowPrice, true
}

// HasLowPrice returns a boolean if a field has been set.
func (o *QuoteEquity) HasLowPrice() bool {
	if o != nil && !IsNil(o.LowPrice) {
		return true
	}

	return false
}

// SetLowPrice gets a reference to the given float64 and assigns it to the LowPrice field.
func (o *QuoteEquity) SetLowPrice(v float64) {
	o.LowPrice = &v
}

// GetMark returns the Mark field value if set, zero value otherwise.
func (o *QuoteEquity) GetMark() float64 {
	if o == nil || IsNil(o.Mark) {
		var ret float64
		return ret
	}
	return *o.Mark
}

// GetMarkOk returns a tuple with the Mark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteEquity) GetMarkOk() (*float64, bool) {
	if o == nil || IsNil(o.Mark) {
		return nil, false
	}
	return o.Mark, true
}

// HasMark returns a boolean if a field has been set.
func (o *QuoteEquity) HasMark() bool {
	if o != nil && !IsNil(o.Mark) {
		return true
	}

	return false
}

// SetMark gets a reference to the given float64 and assigns it to the Mark field.
func (o *QuoteEquity) SetMark(v float64) {
	o.Mark = &v
}

// GetMarkChange returns the MarkChange field value if set, zero value otherwise.
func (o *QuoteEquity) GetMarkChange() float64 {
	if o == nil || IsNil(o.MarkChange) {
		var ret float64
		return ret
	}
	return *o.MarkChange
}

// GetMarkChangeOk returns a tuple with the MarkChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteEquity) GetMarkChangeOk() (*float64, bool) {
	if o == nil || IsNil(o.MarkChange) {
		return nil, false
	}
	return o.MarkChange, true
}

// HasMarkChange returns a boolean if a field has been set.
func (o *QuoteEquity) HasMarkChange() bool {
	if o != nil && !IsNil(o.MarkChange) {
		return true
	}

	return false
}

// SetMarkChange gets a reference to the given float64 and assigns it to the MarkChange field.
func (o *QuoteEquity) SetMarkChange(v float64) {
	o.MarkChange = &v
}

// GetMarkPercentChange returns the MarkPercentChange field value if set, zero value otherwise.
func (o *QuoteEquity) GetMarkPercentChange() float64 {
	if o == nil || IsNil(o.MarkPercentChange) {
		var ret float64
		return ret
	}
	return *o.MarkPercentChange
}

// GetMarkPercentChangeOk returns a tuple with the MarkPercentChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteEquity) GetMarkPercentChangeOk() (*float64, bool) {
	if o == nil || IsNil(o.MarkPercentChange) {
		return nil, false
	}
	return o.MarkPercentChange, true
}

// HasMarkPercentChange returns a boolean if a field has been set.
func (o *QuoteEquity) HasMarkPercentChange() bool {
	if o != nil && !IsNil(o.MarkPercentChange) {
		return true
	}

	return false
}

// SetMarkPercentChange gets a reference to the given float64 and assigns it to the MarkPercentChange field.
func (o *QuoteEquity) SetMarkPercentChange(v float64) {
	o.MarkPercentChange = &v
}

// GetNetChange returns the NetChange field value if set, zero value otherwise.
func (o *QuoteEquity) GetNetChange() float64 {
	if o == nil || IsNil(o.NetChange) {
		var ret float64
		return ret
	}
	return *o.NetChange
}

// GetNetChangeOk returns a tuple with the NetChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteEquity) GetNetChangeOk() (*float64, bool) {
	if o == nil || IsNil(o.NetChange) {
		return nil, false
	}
	return o.NetChange, true
}

// HasNetChange returns a boolean if a field has been set.
func (o *QuoteEquity) HasNetChange() bool {
	if o != nil && !IsNil(o.NetChange) {
		return true
	}

	return false
}

// SetNetChange gets a reference to the given float64 and assigns it to the NetChange field.
func (o *QuoteEquity) SetNetChange(v float64) {
	o.NetChange = &v
}

// GetNetPercentChange returns the NetPercentChange field value if set, zero value otherwise.
func (o *QuoteEquity) GetNetPercentChange() float64 {
	if o == nil || IsNil(o.NetPercentChange) {
		var ret float64
		return ret
	}
	return *o.NetPercentChange
}

// GetNetPercentChangeOk returns a tuple with the NetPercentChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteEquity) GetNetPercentChangeOk() (*float64, bool) {
	if o == nil || IsNil(o.NetPercentChange) {
		return nil, false
	}
	return o.NetPercentChange, true
}

// HasNetPercentChange returns a boolean if a field has been set.
func (o *QuoteEquity) HasNetPercentChange() bool {
	if o != nil && !IsNil(o.NetPercentChange) {
		return true
	}

	return false
}

// SetNetPercentChange gets a reference to the given float64 and assigns it to the NetPercentChange field.
func (o *QuoteEquity) SetNetPercentChange(v float64) {
	o.NetPercentChange = &v
}

// GetOpenPrice returns the OpenPrice field value if set, zero value otherwise.
func (o *QuoteEquity) GetOpenPrice() float64 {
	if o == nil || IsNil(o.OpenPrice) {
		var ret float64
		return ret
	}
	return *o.OpenPrice
}

// GetOpenPriceOk returns a tuple with the OpenPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteEquity) GetOpenPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.OpenPrice) {
		return nil, false
	}
	return o.OpenPrice, true
}

// HasOpenPrice returns a boolean if a field has been set.
func (o *QuoteEquity) HasOpenPrice() bool {
	if o != nil && !IsNil(o.OpenPrice) {
		return true
	}

	return false
}

// SetOpenPrice gets a reference to the given float64 and assigns it to the OpenPrice field.
func (o *QuoteEquity) SetOpenPrice(v float64) {
	o.OpenPrice = &v
}

// GetQuoteTime returns the QuoteTime field value if set, zero value otherwise.
func (o *QuoteEquity) GetQuoteTime() int64 {
	if o == nil || IsNil(o.QuoteTime) {
		var ret int64
		return ret
	}
	return *o.QuoteTime
}

// GetQuoteTimeOk returns a tuple with the QuoteTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteEquity) GetQuoteTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.QuoteTime) {
		return nil, false
	}
	return o.QuoteTime, true
}

// HasQuoteTime returns a boolean if a field has been set.
func (o *QuoteEquity) HasQuoteTime() bool {
	if o != nil && !IsNil(o.QuoteTime) {
		return true
	}

	return false
}

// SetQuoteTime gets a reference to the given int64 and assigns it to the QuoteTime field.
func (o *QuoteEquity) SetQuoteTime(v int64) {
	o.QuoteTime = &v
}

// GetSecurityStatus returns the SecurityStatus field value if set, zero value otherwise.
func (o *QuoteEquity) GetSecurityStatus() string {
	if o == nil || IsNil(o.SecurityStatus) {
		var ret string
		return ret
	}
	return *o.SecurityStatus
}

// GetSecurityStatusOk returns a tuple with the SecurityStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteEquity) GetSecurityStatusOk() (*string, bool) {
	if o == nil || IsNil(o.SecurityStatus) {
		return nil, false
	}
	return o.SecurityStatus, true
}

// HasSecurityStatus returns a boolean if a field has been set.
func (o *QuoteEquity) HasSecurityStatus() bool {
	if o != nil && !IsNil(o.SecurityStatus) {
		return true
	}

	return false
}

// SetSecurityStatus gets a reference to the given string and assigns it to the SecurityStatus field.
func (o *QuoteEquity) SetSecurityStatus(v string) {
	o.SecurityStatus = &v
}

// GetTotalVolume returns the TotalVolume field value if set, zero value otherwise.
func (o *QuoteEquity) GetTotalVolume() int64 {
	if o == nil || IsNil(o.TotalVolume) {
		var ret int64
		return ret
	}
	return *o.TotalVolume
}

// GetTotalVolumeOk returns a tuple with the TotalVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteEquity) GetTotalVolumeOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalVolume) {
		return nil, false
	}
	return o.TotalVolume, true
}

// HasTotalVolume returns a boolean if a field has been set.
func (o *QuoteEquity) HasTotalVolume() bool {
	if o != nil && !IsNil(o.TotalVolume) {
		return true
	}

	return false
}

// SetTotalVolume gets a reference to the given int64 and assigns it to the TotalVolume field.
func (o *QuoteEquity) SetTotalVolume(v int64) {
	o.TotalVolume = &v
}

// GetTradeTime returns the TradeTime field value if set, zero value otherwise.
func (o *QuoteEquity) GetTradeTime() int64 {
	if o == nil || IsNil(o.TradeTime) {
		var ret int64
		return ret
	}
	return *o.TradeTime
}

// GetTradeTimeOk returns a tuple with the TradeTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteEquity) GetTradeTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.TradeTime) {
		return nil, false
	}
	return o.TradeTime, true
}

// HasTradeTime returns a boolean if a field has been set.
func (o *QuoteEquity) HasTradeTime() bool {
	if o != nil && !IsNil(o.TradeTime) {
		return true
	}

	return false
}

// SetTradeTime gets a reference to the given int64 and assigns it to the TradeTime field.
func (o *QuoteEquity) SetTradeTime(v int64) {
	o.TradeTime = &v
}

// GetVolatility returns the Volatility field value if set, zero value otherwise.
func (o *QuoteEquity) GetVolatility() float64 {
	if o == nil || IsNil(o.Volatility) {
		var ret float64
		return ret
	}
	return *o.Volatility
}

// GetVolatilityOk returns a tuple with the Volatility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteEquity) GetVolatilityOk() (*float64, bool) {
	if o == nil || IsNil(o.Volatility) {
		return nil, false
	}
	return o.Volatility, true
}

// HasVolatility returns a boolean if a field has been set.
func (o *QuoteEquity) HasVolatility() bool {
	if o != nil && !IsNil(o.Volatility) {
		return true
	}

	return false
}

// SetVolatility gets a reference to the given float64 and assigns it to the Volatility field.
func (o *QuoteEquity) SetVolatility(v float64) {
	o.Volatility = &v
}

func (o QuoteEquity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuoteEquity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Var52WeekHigh) {
		toSerialize["52WeekHigh"] = o.Var52WeekHigh
	}
	if !IsNil(o.Var52WeekLow) {
		toSerialize["52WeekLow"] = o.Var52WeekLow
	}
	if !IsNil(o.AskMICId) {
		toSerialize["askMICId"] = o.AskMICId
	}
	if !IsNil(o.AskPrice) {
		toSerialize["askPrice"] = o.AskPrice
	}
	if !IsNil(o.AskSize) {
		toSerialize["askSize"] = o.AskSize
	}
	if !IsNil(o.AskTime) {
		toSerialize["askTime"] = o.AskTime
	}
	if !IsNil(o.BidMICId) {
		toSerialize["bidMICId"] = o.BidMICId
	}
	if !IsNil(o.BidPrice) {
		toSerialize["bidPrice"] = o.BidPrice
	}
	if !IsNil(o.BidSize) {
		toSerialize["bidSize"] = o.BidSize
	}
	if !IsNil(o.BidTime) {
		toSerialize["bidTime"] = o.BidTime
	}
	if !IsNil(o.ClosePrice) {
		toSerialize["closePrice"] = o.ClosePrice
	}
	if !IsNil(o.HighPrice) {
		toSerialize["highPrice"] = o.HighPrice
	}
	if !IsNil(o.LastMICId) {
		toSerialize["lastMICId"] = o.LastMICId
	}
	if !IsNil(o.LastPrice) {
		toSerialize["lastPrice"] = o.LastPrice
	}
	if !IsNil(o.LastSize) {
		toSerialize["lastSize"] = o.LastSize
	}
	if !IsNil(o.LowPrice) {
		toSerialize["lowPrice"] = o.LowPrice
	}
	if !IsNil(o.Mark) {
		toSerialize["mark"] = o.Mark
	}
	if !IsNil(o.MarkChange) {
		toSerialize["markChange"] = o.MarkChange
	}
	if !IsNil(o.MarkPercentChange) {
		toSerialize["markPercentChange"] = o.MarkPercentChange
	}
	if !IsNil(o.NetChange) {
		toSerialize["netChange"] = o.NetChange
	}
	if !IsNil(o.NetPercentChange) {
		toSerialize["netPercentChange"] = o.NetPercentChange
	}
	if !IsNil(o.OpenPrice) {
		toSerialize["openPrice"] = o.OpenPrice
	}
	if !IsNil(o.QuoteTime) {
		toSerialize["quoteTime"] = o.QuoteTime
	}
	if !IsNil(o.SecurityStatus) {
		toSerialize["securityStatus"] = o.SecurityStatus
	}
	if !IsNil(o.TotalVolume) {
		toSerialize["totalVolume"] = o.TotalVolume
	}
	if !IsNil(o.TradeTime) {
		toSerialize["tradeTime"] = o.TradeTime
	}
	if !IsNil(o.Volatility) {
		toSerialize["volatility"] = o.Volatility
	}
	return toSerialize, nil
}

type NullableQuoteEquity struct {
	value *QuoteEquity
	isSet bool
}

func (v NullableQuoteEquity) Get() *QuoteEquity {
	return v.value
}

func (v *NullableQuoteEquity) Set(val *QuoteEquity) {
	v.value = val
	v.isSet = true
}

func (v NullableQuoteEquity) IsSet() bool {
	return v.isSet
}

func (v *NullableQuoteEquity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuoteEquity(val *QuoteEquity) *NullableQuoteEquity {
	return &NullableQuoteEquity{value: val, isSet: true}
}

func (v NullableQuoteEquity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuoteEquity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Market Data

Trader API - Market data

API version: 1.0.0
Contact: TraderAPI@Schwab.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the QuoteOption type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuoteOption{}

// QuoteOption Quote data of Option security
type QuoteOption struct {
	// Higest price traded in the past 12 months, or 52 weeks
	Var52WeekHigh *float64 `json:"52WeekHigh,omitempty"`
	// Lowest price traded in the past 12 months, or 52 weeks
	Var52WeekLow *float64 `json:"52WeekLow,omitempty"`
	// Current Best Ask Price
	AskPrice *float64 `json:"askPrice,omitempty"`
	// Number of shares for ask
	AskSize *int32 `json:"askSize,omitempty"`
	// Current Best Bid Price
	BidPrice *float64 `json:"bidPrice,omitempty"`
	// Number of shares for bid
	BidSize *int32 `json:"bidSize,omitempty"`
	// Previous day's closing price
	ClosePrice *float64 `json:"closePrice,omitempty"`
	// Delta Value
	Delta *float64 `json:"delta,omitempty"`
	// Gamma Value
	Gamma *float64 `json:"gamma,omitempty"`
	// Day's high trade price
	HighPrice *float64 `json:"highPrice,omitempty"`
	// Indicative Ask Price applicable only for Indicative Option Symbols
	IndAskPrice *float64 `json:"indAskPrice,omitempty"`
	// Indicative Bid Price applicable only for Indicative Option Symbols
	IndBidPrice *float64 `json:"indBidPrice,omitempty"`
	// Indicative Quote Time in milliseconds since Epoch applicable only for Indicative Option Symbols
	IndQuoteTime *int64 `json:"indQuoteTime,omitempty"`
	// Implied Yield
	ImpliedYield *float64 `json:"impliedYield,omitempty"`
	LastPrice *float64 `json:"lastPrice,omitempty"`
	// Number of shares traded with last trade
	LastSize *int32 `json:"lastSize,omitempty"`
	// Day's low trade price
	LowPrice *float64 `json:"lowPrice,omitempty"`
	// Mark price
	Mark *float64 `json:"mark,omitempty"`
	// Mark Price change
	MarkChange *float64 `json:"markChange,omitempty"`
	// Mark Price percent change
	MarkPercentChange *float64 `json:"markPercentChange,omitempty"`
	// Money Intrinsic Value
	MoneyIntrinsicValue *float64 `json:"moneyIntrinsicValue,omitempty"`
	// Current Last-Prev Close
	NetChange *float64 `json:"netChange,omitempty"`
	// Net Percentage Change
	NetPercentChange *float64 `json:"netPercentChange,omitempty"`
	// Open Interest
	OpenInterest *float64 `json:"openInterest,omitempty"`
	// Price at market open
	OpenPrice *float64 `json:"openPrice,omitempty"`
	// Last quote time in milliseconds since Epoch
	QuoteTime *int64 `json:"quoteTime,omitempty"`
	// Rho Value
	Rho *float64 `json:"rho,omitempty"`
	// Status of security
	SecurityStatus *string `json:"securityStatus,omitempty"`
	// Theoretical option Value
	TheoreticalOptionValue *float64 `json:"theoreticalOptionValue,omitempty"`
	// Theta Value
	Theta *float64 `json:"theta,omitempty"`
	// Time Value
	TimeValue *float64 `json:"timeValue,omitempty"`
	// Aggregated shares traded throughout the day, including pre/post market hours.
	TotalVolume *int64 `json:"totalVolume,omitempty"`
	// Last trade time in milliseconds since Epoch
	TradeTime *int64 `json:"tradeTime,omitempty"`
	// Underlying Price
	UnderlyingPrice *float64 `json:"underlyingPrice,omitempty"`
	// Vega Value
	Vega *float64 `json:"vega,omitempty"`
	// Option Risk/Volatility Measurement
	Volatility *float64 `json:"volatility,omitempty"`
}

// NewQuoteOption instantiates a new QuoteOption object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuoteOption() *QuoteOption {
	this := QuoteOption{}
	return &this
}

// NewQuoteOptionWithDefaults instantiates a new QuoteOption object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuoteOptionWithDefaults() *QuoteOption {
	this := QuoteOption{}
	return &this
}

// GetVar52WeekHigh returns the Var52WeekHigh field value if set, zero value otherwise.
func (o *QuoteOption) GetVar52WeekHigh() float64 {
	if o == nil || IsNil(o.Var52WeekHigh) {
		var ret float64
		return ret
	}
	return *o.Var52WeekHigh
}

// GetVar52WeekHighOk returns a tuple with the Var52WeekHigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetVar52WeekHighOk() (*float64, bool) {
	if o == nil || IsNil(o.Var52WeekHigh) {
		return nil, false
	}
	return o.Var52WeekHigh, true
}

// HasVar52WeekHigh returns a boolean if a field has been set.
func (o *QuoteOption) HasVar52WeekHigh() bool {
	if o != nil && !IsNil(o.Var52WeekHigh) {
		return true
	}

	return false
}

// SetVar52WeekHigh gets a reference to the given float64 and assigns it to the Var52WeekHigh field.
func (o *QuoteOption) SetVar52WeekHigh(v float64) {
	o.Var52WeekHigh = &v
}

// GetVar52WeekLow returns the Var52WeekLow field value if set, zero value otherwise.
func (o *QuoteOption) GetVar52WeekLow() float64 {
	if o == nil || IsNil(o.Var52WeekLow) {
		var ret float64
		return ret
	}
	return *o.Var52WeekLow
}

// GetVar52WeekLowOk returns a tuple with the Var52WeekLow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetVar52WeekLowOk() (*float64, bool) {
	if o == nil || IsNil(o.Var52WeekLow) {
		return nil, false
	}
	return o.Var52WeekLow, true
}

// HasVar52WeekLow returns a boolean if a field has been set.
func (o *QuoteOption) HasVar52WeekLow() bool {
	if o != nil && !IsNil(o.Var52WeekLow) {
		return true
	}

	return false
}

// SetVar52WeekLow gets a reference to the given float64 and assigns it to the Var52WeekLow field.
func (o *QuoteOption) SetVar52WeekLow(v float64) {
	o.Var52WeekLow = &v
}

// GetAskPrice returns the AskPrice field value if set, zero value otherwise.
func (o *QuoteOption) GetAskPrice() float64 {
	if o == nil || IsNil(o.AskPrice) {
		var ret float64
		return ret
	}
	return *o.AskPrice
}

// GetAskPriceOk returns a tuple with the AskPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetAskPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.AskPrice) {
		return nil, false
	}
	return o.AskPrice, true
}

// HasAskPrice returns a boolean if a field has been set.
func (o *QuoteOption) HasAskPrice() bool {
	if o != nil && !IsNil(o.AskPrice) {
		return true
	}

	return false
}

// SetAskPrice gets a reference to the given float64 and assigns it to the AskPrice field.
func (o *QuoteOption) SetAskPrice(v float64) {
	o.AskPrice = &v
}

// GetAskSize returns the AskSize field value if set, zero value otherwise.
func (o *QuoteOption) GetAskSize() int32 {
	if o == nil || IsNil(o.AskSize) {
		var ret int32
		return ret
	}
	return *o.AskSize
}

// GetAskSizeOk returns a tuple with the AskSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetAskSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.AskSize) {
		return nil, false
	}
	return o.AskSize, true
}

// HasAskSize returns a boolean if a field has been set.
func (o *QuoteOption) HasAskSize() bool {
	if o != nil && !IsNil(o.AskSize) {
		return true
	}

	return false
}

// SetAskSize gets a reference to the given int32 and assigns it to the AskSize field.
func (o *QuoteOption) SetAskSize(v int32) {
	o.AskSize = &v
}

// GetBidPrice returns the BidPrice field value if set, zero value otherwise.
func (o *QuoteOption) GetBidPrice() float64 {
	if o == nil || IsNil(o.BidPrice) {
		var ret float64
		return ret
	}
	return *o.BidPrice
}

// GetBidPriceOk returns a tuple with the BidPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetBidPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.BidPrice) {
		return nil, false
	}
	return o.BidPrice, true
}

// HasBidPrice returns a boolean if a field has been set.
func (o *QuoteOption) HasBidPrice() bool {
	if o != nil && !IsNil(o.BidPrice) {
		return true
	}

	return false
}

// SetBidPrice gets a reference to the given float64 and assigns it to the BidPrice field.
func (o *QuoteOption) SetBidPrice(v float64) {
	o.BidPrice = &v
}

// GetBidSize returns the BidSize field value if set, zero value otherwise.
func (o *QuoteOption) GetBidSize() int32 {
	if o == nil || IsNil(o.BidSize) {
		var ret int32
		return ret
	}
	return *o.BidSize
}

// GetBidSizeOk returns a tuple with the BidSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetBidSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.BidSize) {
		return nil, false
	}
	return o.BidSize, true
}

// HasBidSize returns a boolean if a field has been set.
func (o *QuoteOption) HasBidSize() bool {
	if o != nil && !IsNil(o.BidSize) {
		return true
	}

	return false
}

// SetBidSize gets a reference to the given int32 and assigns it to the BidSize field.
func (o *QuoteOption) SetBidSize(v int32) {
	o.BidSize = &v
}

// GetClosePrice returns the ClosePrice field value if set, zero value otherwise.
func (o *QuoteOption) GetClosePrice() float64 {
	if o == nil || IsNil(o.ClosePrice) {
		var ret float64
		return ret
	}
	return *o.ClosePrice
}

// GetClosePriceOk returns a tuple with the ClosePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetClosePriceOk() (*float64, bool) {
	if o == nil || IsNil(o.ClosePrice) {
		return nil, false
	}
	return o.ClosePrice, true
}

// HasClosePrice returns a boolean if a field has been set.
func (o *QuoteOption) HasClosePrice() bool {
	if o != nil && !IsNil(o.ClosePrice) {
		return true
	}

	return false
}

// SetClosePrice gets a reference to the given float64 and assigns it to the ClosePrice field.
func (o *QuoteOption) SetClosePrice(v float64) {
	o.ClosePrice = &v
}

// GetDelta returns the Delta field value if set, zero value otherwise.
func (o *QuoteOption) GetDelta() float64 {
	if o == nil || IsNil(o.Delta) {
		var ret float64
		return ret
	}
	return *o.Delta
}

// GetDeltaOk returns a tuple with the Delta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetDeltaOk() (*float64, bool) {
	if o == nil || IsNil(o.Delta) {
		return nil, false
	}
	return o.Delta, true
}

// HasDelta returns a boolean if a field has been set.
func (o *QuoteOption) HasDelta() bool {
	if o != nil && !IsNil(o.Delta) {
		return true
	}

	return false
}

// SetDelta gets a reference to the given float64 and assigns it to the Delta field.
func (o *QuoteOption) SetDelta(v float64) {
	o.Delta = &v
}

// GetGamma returns the Gamma field value if set, zero value otherwise.
func (o *QuoteOption) GetGamma() float64 {
	if o == nil || IsNil(o.Gamma) {
		var ret float64
		return ret
	}
	return *o.Gamma
}

// GetGammaOk returns a tuple with the Gamma field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetGammaOk() (*float64, bool) {
	if o == nil || IsNil(o.Gamma) {
		return nil, false
	}
	return o.Gamma, true
}

// HasGamma returns a boolean if a field has been set.
func (o *QuoteOption) HasGamma() bool {
	if o != nil && !IsNil(o.Gamma) {
		return true
	}

	return false
}

// SetGamma gets a reference to the given float64 and assigns it to the Gamma field.
func (o *QuoteOption) SetGamma(v float64) {
	o.Gamma = &v
}

// GetHighPrice returns the HighPrice field value if set, zero value otherwise.
func (o *QuoteOption) GetHighPrice() float64 {
	if o == nil || IsNil(o.HighPrice) {
		var ret float64
		return ret
	}
	return *o.HighPrice
}

// GetHighPriceOk returns a tuple with the HighPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetHighPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.HighPrice) {
		return nil, false
	}
	return o.HighPrice, true
}

// HasHighPrice returns a boolean if a field has been set.
func (o *QuoteOption) HasHighPrice() bool {
	if o != nil && !IsNil(o.HighPrice) {
		return true
	}

	return false
}

// SetHighPrice gets a reference to the given float64 and assigns it to the HighPrice field.
func (o *QuoteOption) SetHighPrice(v float64) {
	o.HighPrice = &v
}

// GetIndAskPrice returns the IndAskPrice field value if set, zero value otherwise.
func (o *QuoteOption) GetIndAskPrice() float64 {
	if o == nil || IsNil(o.IndAskPrice) {
		var ret float64
		return ret
	}
	return *o.IndAskPrice
}

// GetIndAskPriceOk returns a tuple with the IndAskPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetIndAskPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.IndAskPrice) {
		return nil, false
	}
	return o.IndAskPrice, true
}

// HasIndAskPrice returns a boolean if a field has been set.
func (o *QuoteOption) HasIndAskPrice() bool {
	if o != nil && !IsNil(o.IndAskPrice) {
		return true
	}

	return false
}

// SetIndAskPrice gets a reference to the given float64 and assigns it to the IndAskPrice field.
func (o *QuoteOption) SetIndAskPrice(v float64) {
	o.IndAskPrice = &v
}

// GetIndBidPrice returns the IndBidPrice field value if set, zero value otherwise.
func (o *QuoteOption) GetIndBidPrice() float64 {
	if o == nil || IsNil(o.IndBidPrice) {
		var ret float64
		return ret
	}
	return *o.IndBidPrice
}

// GetIndBidPriceOk returns a tuple with the IndBidPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetIndBidPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.IndBidPrice) {
		return nil, false
	}
	return o.IndBidPrice, true
}

// HasIndBidPrice returns a boolean if a field has been set.
func (o *QuoteOption) HasIndBidPrice() bool {
	if o != nil && !IsNil(o.IndBidPrice) {
		return true
	}

	return false
}

// SetIndBidPrice gets a reference to the given float64 and assigns it to the IndBidPrice field.
func (o *QuoteOption) SetIndBidPrice(v float64) {
	o.IndBidPrice = &v
}

// GetIndQuoteTime returns the IndQuoteTime field value if set, zero value otherwise.
func (o *QuoteOption) GetIndQuoteTime() int64 {
	if o == nil || IsNil(o.IndQuoteTime) {
		var ret int64
		return ret
	}
	return *o.IndQuoteTime
}

// GetIndQuoteTimeOk returns a tuple with the IndQuoteTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetIndQuoteTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.IndQuoteTime) {
		return nil, false
	}
	return o.IndQuoteTime, true
}

// HasIndQuoteTime returns a boolean if a field has been set.
func (o *QuoteOption) HasIndQuoteTime() bool {
	if o != nil && !IsNil(o.IndQuoteTime) {
		return true
	}

	return false
}

// SetIndQuoteTime gets a reference to the given int64 and assigns it to the IndQuoteTime field.
func (o *QuoteOption) SetIndQuoteTime(v int64) {
	o.IndQuoteTime = &v
}

// GetImpliedYield returns the ImpliedYield field value if set, zero value otherwise.
func (o *QuoteOption) GetImpliedYield() float64 {
	if o == nil || IsNil(o.ImpliedYield) {
		var ret float64
		return ret
	}
	return *o.ImpliedYield
}

// GetImpliedYieldOk returns a tuple with the ImpliedYield field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetImpliedYieldOk() (*float64, bool) {
	if o == nil || IsNil(o.ImpliedYield) {
		return nil, false
	}
	return o.ImpliedYield, true
}

// HasImpliedYield returns a boolean if a field has been set.
func (o *QuoteOption) HasImpliedYield() bool {
	if o != nil && !IsNil(o.ImpliedYield) {
		return true
	}

	return false
}

// SetImpliedYield gets a reference to the given float64 and assigns it to the ImpliedYield field.
func (o *QuoteOption) SetImpliedYield(v float64) {
	o.ImpliedYield = &v
}

// GetLastPrice returns the LastPrice field value if set, zero value otherwise.
func (o *QuoteOption) GetLastPrice() float64 {
	if o == nil || IsNil(o.LastPrice) {
		var ret float64
		return ret
	}
	return *o.LastPrice
}

// GetLastPriceOk returns a tuple with the LastPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetLastPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.LastPrice) {
		return nil, false
	}
	return o.LastPrice, true
}

// HasLastPrice returns a boolean if a field has been set.
func (o *QuoteOption) HasLastPrice() bool {
	if o != nil && !IsNil(o.LastPrice) {
		return true
	}

	return false
}

// SetLastPrice gets a reference to the given float64 and assigns it to the LastPrice field.
func (o *QuoteOption) SetLastPrice(v float64) {
	o.LastPrice = &v
}

// GetLastSize returns the LastSize field value if set, zero value otherwise.
func (o *QuoteOption) GetLastSize() int32 {
	if o == nil || IsNil(o.LastSize) {
		var ret int32
		return ret
	}
	return *o.LastSize
}

// GetLastSizeOk returns a tuple with the LastSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetLastSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.LastSize) {
		return nil, false
	}
	return o.LastSize, true
}

// HasLastSize returns a boolean if a field has been set.
func (o *QuoteOption) HasLastSize() bool {
	if o != nil && !IsNil(o.LastSize) {
		return true
	}

	return false
}

// SetLastSize gets a reference to the given int32 and assigns it to the LastSize field.
func (o *QuoteOption) SetLastSize(v int32) {
	o.LastSize = &v
}

// GetLowPrice returns the LowPrice field value if set, zero value otherwise.
func (o *QuoteOption) GetLowPrice() float64 {
	if o == nil || IsNil(o.LowPrice) {
		var ret float64
		return ret
	}
	return *o.LowPrice
}

// GetLowPriceOk returns a tuple with the LowPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetLowPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.LowPrice) {
		return nil, false
	}
	return o.LowPrice, true
}

// HasLowPrice returns a boolean if a field has been set.
func (o *QuoteOption) HasLowPrice() bool {
	if o != nil && !IsNil(o.LowPrice) {
		return true
	}

	return false
}

// SetLowPrice gets a reference to the given float64 and assigns it to the LowPrice field.
func (o *QuoteOption) SetLowPrice(v float64) {
	o.LowPrice = &v
}

// GetMark returns the Mark field value if set, zero value otherwise.
func (o *QuoteOption) GetMark() float64 {
	if o == nil || IsNil(o.Mark) {
		var ret float64
		return ret
	}
	return *o.Mark
}

// GetMarkOk returns a tuple with the Mark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetMarkOk() (*float64, bool) {
	if o == nil || IsNil(o.Mark) {
		return nil, false
	}
	return o.Mark, true
}

// HasMark returns a boolean if a field has been set.
func (o *QuoteOption) HasMark() bool {
	if o != nil && !IsNil(o.Mark) {
		return true
	}

	return false
}

// SetMark gets a reference to the given float64 and assigns it to the Mark field.
func (o *QuoteOption) SetMark(v float64) {
	o.Mark = &v
}

// GetMarkChange returns the MarkChange field value if set, zero value otherwise.
func (o *QuoteOption) GetMarkChange() float64 {
	if o == nil || IsNil(o.MarkChange) {
		var ret float64
		return ret
	}
	return *o.MarkChange
}

// GetMarkChangeOk returns a tuple with the MarkChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetMarkChangeOk() (*float64, bool) {
	if o == nil || IsNil(o.MarkChange) {
		return nil, false
	}
	return o.MarkChange, true
}

// HasMarkChange returns a boolean if a field has been set.
func (o *QuoteOption) HasMarkChange() bool {
	if o != nil && !IsNil(o.MarkChange) {
		return true
	}

	return false
}

// SetMarkChange gets a reference to the given float64 and assigns it to the MarkChange field.
func (o *QuoteOption) SetMarkChange(v float64) {
	o.MarkChange = &v
}

// GetMarkPercentChange returns the MarkPercentChange field value if set, zero value otherwise.
func (o *QuoteOption) GetMarkPercentChange() float64 {
	if o == nil || IsNil(o.MarkPercentChange) {
		var ret float64
		return ret
	}
	return *o.MarkPercentChange
}

// GetMarkPercentChangeOk returns a tuple with the MarkPercentChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetMarkPercentChangeOk() (*float64, bool) {
	if o == nil || IsNil(o.MarkPercentChange) {
		return nil, false
	}
	return o.MarkPercentChange, true
}

// HasMarkPercentChange returns a boolean if a field has been set.
func (o *QuoteOption) HasMarkPercentChange() bool {
	if o != nil && !IsNil(o.MarkPercentChange) {
		return true
	}

	return false
}

// SetMarkPercentChange gets a reference to the given float64 and assigns it to the MarkPercentChange field.
func (o *QuoteOption) SetMarkPercentChange(v float64) {
	o.MarkPercentChange = &v
}

// GetMoneyIntrinsicValue returns the MoneyIntrinsicValue field value if set, zero value otherwise.
func (o *QuoteOption) GetMoneyIntrinsicValue() float64 {
	if o == nil || IsNil(o.MoneyIntrinsicValue) {
		var ret float64
		return ret
	}
	return *o.MoneyIntrinsicValue
}

// GetMoneyIntrinsicValueOk returns a tuple with the MoneyIntrinsicValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetMoneyIntrinsicValueOk() (*float64, bool) {
	if o == nil || IsNil(o.MoneyIntrinsicValue) {
		return nil, false
	}
	return o.MoneyIntrinsicValue, true
}

// HasMoneyIntrinsicValue returns a boolean if a field has been set.
func (o *QuoteOption) HasMoneyIntrinsicValue() bool {
	if o != nil && !IsNil(o.MoneyIntrinsicValue) {
		return true
	}

	return false
}

// SetMoneyIntrinsicValue gets a reference to the given float64 and assigns it to the MoneyIntrinsicValue field.
func (o *QuoteOption) SetMoneyIntrinsicValue(v float64) {
	o.MoneyIntrinsicValue = &v
}

// GetNetChange returns the NetChange field value if set, zero value otherwise.
func (o *QuoteOption) GetNetChange() float64 {
	if o == nil || IsNil(o.NetChange) {
		var ret float64
		return ret
	}
	return *o.NetChange
}

// GetNetChangeOk returns a tuple with the NetChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetNetChangeOk() (*float64, bool) {
	if o == nil || IsNil(o.NetChange) {
		return nil, false
	}
	return o.NetChange, true
}

// HasNetChange returns a boolean if a field has been set.
func (o *QuoteOption) HasNetChange() bool {
	if o != nil && !IsNil(o.NetChange) {
		return true
	}

	return false
}

// SetNetChange gets a reference to the given float64 and assigns it to the NetChange field.
func (o *QuoteOption) SetNetChange(v float64) {
	o.NetChange = &v
}

// GetNetPercentChange returns the NetPercentChange field value if set, zero value otherwise.
func (o *QuoteOption) GetNetPercentChange() float64 {
	if o == nil || IsNil(o.NetPercentChange) {
		var ret float64
		return ret
	}
	return *o.NetPercentChange
}

// GetNetPercentChangeOk returns a tuple with the NetPercentChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetNetPercentChangeOk() (*float64, bool) {
	if o == nil || IsNil(o.NetPercentChange) {
		return nil, false
	}
	return o.NetPercentChange, true
}

// HasNetPercentChange returns a boolean if a field has been set.
func (o *QuoteOption) HasNetPercentChange() bool {
	if o != nil && !IsNil(o.NetPercentChange) {
		return true
	}

	return false
}

// SetNetPercentChange gets a reference to the given float64 and assigns it to the NetPercentChange field.
func (o *QuoteOption) SetNetPercentChange(v float64) {
	o.NetPercentChange = &v
}

// GetOpenInterest returns the OpenInterest field value if set, zero value otherwise.
func (o *QuoteOption) GetOpenInterest() float64 {
	if o == nil || IsNil(o.OpenInterest) {
		var ret float64
		return ret
	}
	return *o.OpenInterest
}

// GetOpenInterestOk returns a tuple with the OpenInterest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetOpenInterestOk() (*float64, bool) {
	if o == nil || IsNil(o.OpenInterest) {
		return nil, false
	}
	return o.OpenInterest, true
}

// HasOpenInterest returns a boolean if a field has been set.
func (o *QuoteOption) HasOpenInterest() bool {
	if o != nil && !IsNil(o.OpenInterest) {
		return true
	}

	return false
}

// SetOpenInterest gets a reference to the given float64 and assigns it to the OpenInterest field.
func (o *QuoteOption) SetOpenInterest(v float64) {
	o.OpenInterest = &v
}

// GetOpenPrice returns the OpenPrice field value if set, zero value otherwise.
func (o *QuoteOption) GetOpenPrice() float64 {
	if o == nil || IsNil(o.OpenPrice) {
		var ret float64
		return ret
	}
	return *o.OpenPrice
}

// GetOpenPriceOk returns a tuple with the OpenPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetOpenPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.OpenPrice) {
		return nil, false
	}
	return o.OpenPrice, true
}

// HasOpenPrice returns a boolean if a field has been set.
func (o *QuoteOption) HasOpenPrice() bool {
	if o != nil && !IsNil(o.OpenPrice) {
		return true
	}

	return false
}

// SetOpenPrice gets a reference to the given float64 and assigns it to the OpenPrice field.
func (o *QuoteOption) SetOpenPrice(v float64) {
	o.OpenPrice = &v
}

// GetQuoteTime returns the QuoteTime field value if set, zero value otherwise.
func (o *QuoteOption) GetQuoteTime() int64 {
	if o == nil || IsNil(o.QuoteTime) {
		var ret int64
		return ret
	}
	return *o.QuoteTime
}

// GetQuoteTimeOk returns a tuple with the QuoteTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetQuoteTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.QuoteTime) {
		return nil, false
	}
	return o.QuoteTime, true
}

// HasQuoteTime returns a boolean if a field has been set.
func (o *QuoteOption) HasQuoteTime() bool {
	if o != nil && !IsNil(o.QuoteTime) {
		return true
	}

	return false
}

// SetQuoteTime gets a reference to the given int64 and assigns it to the QuoteTime field.
func (o *QuoteOption) SetQuoteTime(v int64) {
	o.QuoteTime = &v
}

// GetRho returns the Rho field value if set, zero value otherwise.
func (o *QuoteOption) GetRho() float64 {
	if o == nil || IsNil(o.Rho) {
		var ret float64
		return ret
	}
	return *o.Rho
}

// GetRhoOk returns a tuple with the Rho field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetRhoOk() (*float64, bool) {
	if o == nil || IsNil(o.Rho) {
		return nil, false
	}
	return o.Rho, true
}

// HasRho returns a boolean if a field has been set.
func (o *QuoteOption) HasRho() bool {
	if o != nil && !IsNil(o.Rho) {
		return true
	}

	return false
}

// SetRho gets a reference to the given float64 and assigns it to the Rho field.
func (o *QuoteOption) SetRho(v float64) {
	o.Rho = &v
}

// GetSecurityStatus returns the SecurityStatus field value if set, zero value otherwise.
func (o *QuoteOption) GetSecurityStatus() string {
	if o == nil || IsNil(o.SecurityStatus) {
		var ret string
		return ret
	}
	return *o.SecurityStatus
}

// GetSecurityStatusOk returns a tuple with the SecurityStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetSecurityStatusOk() (*string, bool) {
	if o == nil || IsNil(o.SecurityStatus) {
		return nil, false
	}
	return o.SecurityStatus, true
}

// HasSecurityStatus returns a boolean if a field has been set.
func (o *QuoteOption) HasSecurityStatus() bool {
	if o != nil && !IsNil(o.SecurityStatus) {
		return true
	}

	return false
}

// SetSecurityStatus gets a reference to the given string and assigns it to the SecurityStatus field.
func (o *QuoteOption) SetSecurityStatus(v string) {
	o.SecurityStatus = &v
}

// GetTheoreticalOptionValue returns the TheoreticalOptionValue field value if set, zero value otherwise.
func (o *QuoteOption) GetTheoreticalOptionValue() float64 {
	if o == nil || IsNil(o.TheoreticalOptionValue) {
		var ret float64
		return ret
	}
	return *o.TheoreticalOptionValue
}

// GetTheoreticalOptionValueOk returns a tuple with the TheoreticalOptionValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetTheoreticalOptionValueOk() (*float64, bool) {
	if o == nil || IsNil(o.TheoreticalOptionValue) {
		return nil, false
	}
	return o.TheoreticalOptionValue, true
}

// HasTheoreticalOptionValue returns a boolean if a field has been set.
func (o *QuoteOption) HasTheoreticalOptionValue() bool {
	if o != nil && !IsNil(o.TheoreticalOptionValue) {
		return true
	}

	return false
}

// SetTheoreticalOptionValue gets a reference to the given float64 and assigns it to the TheoreticalOptionValue field.
func (o *QuoteOption) SetTheoreticalOptionValue(v float64) {
	o.TheoreticalOptionValue = &v
}

// GetTheta returns the Theta field value if set, zero value otherwise.
func (o *QuoteOption) GetTheta() float64 {
	if o == nil || IsNil(o.Theta) {
		var ret float64
		return ret
	}
	return *o.Theta
}

// GetThetaOk returns a tuple with the Theta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetThetaOk() (*float64, bool) {
	if o == nil || IsNil(o.Theta) {
		return nil, false
	}
	return o.Theta, true
}

// HasTheta returns a boolean if a field has been set.
func (o *QuoteOption) HasTheta() bool {
	if o != nil && !IsNil(o.Theta) {
		return true
	}

	return false
}

// SetTheta gets a reference to the given float64 and assigns it to the Theta field.
func (o *QuoteOption) SetTheta(v float64) {
	o.Theta = &v
}

// GetTimeValue returns the TimeValue field value if set, zero value otherwise.
func (o *QuoteOption) GetTimeValue() float64 {
	if o == nil || IsNil(o.TimeValue) {
		var ret float64
		return ret
	}
	return *o.TimeValue
}

// GetTimeValueOk returns a tuple with the TimeValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetTimeValueOk() (*float64, bool) {
	if o == nil || IsNil(o.TimeValue) {
		return nil, false
	}
	return o.TimeValue, true
}

// HasTimeValue returns a boolean if a field has been set.
func (o *QuoteOption) HasTimeValue() bool {
	if o != nil && !IsNil(o.TimeValue) {
		return true
	}

	return false
}

// SetTimeValue gets a reference to the given float64 and assigns it to the TimeValue field.
func (o *QuoteOption) SetTimeValue(v float64) {
	o.TimeValue = &v
}

// GetTotalVolume returns the TotalVolume field value if set, zero value otherwise.
func (o *QuoteOption) GetTotalVolume() int64 {
	if o == nil || IsNil(o.TotalVolume) {
		var ret int64
		return ret
	}
	return *o.TotalVolume
}

// GetTotalVolumeOk returns a tuple with the TotalVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetTotalVolumeOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalVolume) {
		return nil, false
	}
	return o.TotalVolume, true
}

// HasTotalVolume returns a boolean if a field has been set.
func (o *QuoteOption) HasTotalVolume() bool {
	if o != nil && !IsNil(o.TotalVolume) {
		return true
	}

	return false
}

// SetTotalVolume gets a reference to the given int64 and assigns it to the TotalVolume field.
func (o *QuoteOption) SetTotalVolume(v int64) {
	o.TotalVolume = &v
}

// GetTradeTime returns the TradeTime field value if set, zero value otherwise.
func (o *QuoteOption) GetTradeTime() int64 {
	if o == nil || IsNil(o.TradeTime) {
		var ret int64
		return ret
	}
	return *o.TradeTime
}

// GetTradeTimeOk returns a tuple with the TradeTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetTradeTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.TradeTime) {
		return nil, false
	}
	return o.TradeTime, true
}

// HasTradeTime returns a boolean if a field has been set.
func (o *QuoteOption) HasTradeTime() bool {
	if o != nil && !IsNil(o.TradeTime) {
		return true
	}

	return false
}

// SetTradeTime gets a reference to the given int64 and assigns it to the TradeTime field.
func (o *QuoteOption) SetTradeTime(v int64) {
	o.TradeTime = &v
}

// GetUnderlyingPrice returns the UnderlyingPrice field value if set, zero value otherwise.
func (o *QuoteOption) GetUnderlyingPrice() float64 {
	if o == nil || IsNil(o.UnderlyingPrice) {
		var ret float64
		return ret
	}
	return *o.UnderlyingPrice
}

// GetUnderlyingPriceOk returns a tuple with the UnderlyingPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetUnderlyingPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.UnderlyingPrice) {
		return nil, false
	}
	return o.UnderlyingPrice, true
}

// HasUnderlyingPrice returns a boolean if a field has been set.
func (o *QuoteOption) HasUnderlyingPrice() bool {
	if o != nil && !IsNil(o.UnderlyingPrice) {
		return true
	}

	return false
}

// SetUnderlyingPrice gets a reference to the given float64 and assigns it to the UnderlyingPrice field.
func (o *QuoteOption) SetUnderlyingPrice(v float64) {
	o.UnderlyingPrice = &v
}

// GetVega returns the Vega field value if set, zero value otherwise.
func (o *QuoteOption) GetVega() float64 {
	if o == nil || IsNil(o.Vega) {
		var ret float64
		return ret
	}
	return *o.Vega
}

// GetVegaOk returns a tuple with the Vega field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetVegaOk() (*float64, bool) {
	if o == nil || IsNil(o.Vega) {
		return nil, false
	}
	return o.Vega, true
}

// HasVega returns a boolean if a field has been set.
func (o *QuoteOption) HasVega() bool {
	if o != nil && !IsNil(o.Vega) {
		return true
	}

	return false
}

// SetVega gets a reference to the given float64 and assigns it to the Vega field.
func (o *QuoteOption) SetVega(v float64) {
	o.Vega = &v
}

// GetVolatility returns the Volatility field value if set, zero value otherwise.
func (o *QuoteOption) GetVolatility() float64 {
	if o == nil || IsNil(o.Volatility) {
		var ret float64
		return ret
	}
	return *o.Volatility
}

// GetVolatilityOk returns a tuple with the Volatility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOption) GetVolatilityOk() (*float64, bool) {
	if o == nil || IsNil(o.Volatility) {
		return nil, false
	}
	return o.Volatility, true
}

// HasVolatility returns a boolean if a field has been set.
func (o *QuoteOption) HasVolatility() bool {
	if o != nil && !IsNil(o.Volatility) {
		return true
	}

	return false
}

// SetVolatility gets a reference to the given float64 and assigns it to the Volatility field.
func (o *QuoteOption) SetVolatility(v float64) {
	o.Volatility = &v
}

func (o QuoteOption) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuoteOption) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Var52WeekHigh) {
		toSerialize["52WeekHigh"] = o.Var52WeekHigh
	}
	if !IsNil(o.Var52WeekLow) {
		toSerialize["52WeekLow"] = o.Var52WeekLow
	}
	if !IsNil(o.AskPrice) {
		toSerialize["askPrice"] = o.AskPrice
	}
	if !IsNil(o.AskSize) {
		toSerialize["askSize"] = o.AskSize
	}
	if !IsNil(o.BidPrice) {
		toSerialize["bidPrice"] = o.BidPrice
	}
	if !IsNil(o.BidSize) {
		toSerialize["bidSize"] = o.BidSize
	}
	if !IsNil(o.ClosePrice) {
		toSerialize["closePrice"] = o.ClosePrice
	}
	if !IsNil(o.Delta) {
		toSerialize["delta"] = o.Delta
	}
	if !IsNil(o.Gamma) {
		toSerialize["gamma"] = o.Gamma
	}
	if !IsNil(o.HighPrice) {
		toSerialize["highPrice"] = o.HighPrice
	}
	if !IsNil(o.IndAskPrice) {
		toSerialize["indAskPrice"] = o.IndAskPrice
	}
	if !IsNil(o.IndBidPrice) {
		toSerialize["indBidPrice"] = o.IndBidPrice
	}
	if !IsNil(o.IndQuoteTime) {
		toSerialize["indQuoteTime"] = o.IndQuoteTime
	}
	if !IsNil(o.ImpliedYield) {
		toSerialize["impliedYield"] = o.ImpliedYield
	}
	if !IsNil(o.LastPrice) {
		toSerialize["lastPrice"] = o.LastPrice
	}
	if !IsNil(o.LastSize) {
		toSerialize["lastSize"] = o.LastSize
	}
	if !IsNil(o.LowPrice) {
		toSerialize["lowPrice"] = o.LowPrice
	}
	if !IsNil(o.Mark) {
		toSerialize["mark"] = o.Mark
	}
	if !IsNil(o.MarkChange) {
		toSerialize["markChange"] = o.MarkChange
	}
	if !IsNil(o.MarkPercentChange) {
		toSerialize["markPercentChange"] = o.MarkPercentChange
	}
	if !IsNil(o.MoneyIntrinsicValue) {
		toSerialize["moneyIntrinsicValue"] = o.MoneyIntrinsicValue
	}
	if !IsNil(o.NetChange) {
		toSerialize["netChange"] = o.NetChange
	}
	if !IsNil(o.NetPercentChange) {
		toSerialize["netPercentChange"] = o.NetPercentChange
	}
	if !IsNil(o.OpenInterest) {
		toSerialize["openInterest"] = o.OpenInterest
	}
	if !IsNil(o.OpenPrice) {
		toSerialize["openPrice"] = o.OpenPrice
	}
	if !IsNil(o.QuoteTime) {
		toSerialize["quoteTime"] = o.QuoteTime
	}
	if !IsNil(o.Rho) {
		toSerialize["rho"] = o.Rho
	}
	if !IsNil(o.SecurityStatus) {
		toSerialize["securityStatus"] = o.SecurityStatus
	}
	if !IsNil(o.TheoreticalOptionValue) {
		toSerialize["theoreticalOptionValue"] = o.TheoreticalOptionValue
	}
	if !IsNil(o.Theta) {
		toSerialize["theta"] = o.Theta
	}
	if !IsNil(o.TimeValue) {
		toSerialize["timeValue"] = o.TimeValue
	}
	if !IsNil(o.TotalVolume) {
		toSerialize["totalVolume"] = o.TotalVolume
	}
	if !IsNil(o.TradeTime) {
		toSerialize["tradeTime"] = o.TradeTime
	}
	if !IsNil(o.UnderlyingPrice) {
		toSerialize["underlyingPrice"] = o.UnderlyingPrice
	}
	if !IsNil(o.Vega) {
		toSerialize["vega"] = o.Vega
	}
	if !IsNil(o.Volatility) {
		toSerialize["volatility"] = o.Volatility
	}
	return toSerialize, nil
}

type NullableQuoteOption struct {
	value *QuoteOption
	isSet bool
}

func (v NullableQuoteOption) Get() *QuoteOption {
	return v.value
}

func (v *NullableQuoteOption) Set(val *QuoteOption) {
	v.value = val
	v.isSet = true
}

func (v NullableQuoteOption) IsSet() bool {
	return v.isSet
}

func (v *NullableQuoteOption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuoteOption(val *QuoteOption) *NullableQuoteOption {
	return &NullableQuoteOption{value: val, isSet: true}
}

func (v NullableQuoteOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuoteOption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



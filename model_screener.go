/*
Market Data

Trader API - Market data

API version: 1.0.0
Contact: TraderAPI@Schwab.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the Screener type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Screener{}

// Screener Security info of most moved with in an index
type Screener struct {
	// percent or value changed, by default its percent changed
	Change *float64 `json:"change,omitempty"`
	// Name of security
	Description *string `json:"description,omitempty"`
	Direction *string `json:"direction,omitempty"`
	// what was last quoted price
	Last *float64 `json:"last,omitempty"`
	// schwab security symbol
	Symbol *string `json:"symbol,omitempty"`
	TotalVolume *int64 `json:"totalVolume,omitempty"`
}

// NewScreener instantiates a new Screener object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScreener() *Screener {
	this := Screener{}
	return &this
}

// NewScreenerWithDefaults instantiates a new Screener object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScreenerWithDefaults() *Screener {
	this := Screener{}
	return &this
}

// GetChange returns the Change field value if set, zero value otherwise.
func (o *Screener) GetChange() float64 {
	if o == nil || IsNil(o.Change) {
		var ret float64
		return ret
	}
	return *o.Change
}

// GetChangeOk returns a tuple with the Change field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Screener) GetChangeOk() (*float64, bool) {
	if o == nil || IsNil(o.Change) {
		return nil, false
	}
	return o.Change, true
}

// HasChange returns a boolean if a field has been set.
func (o *Screener) HasChange() bool {
	if o != nil && !IsNil(o.Change) {
		return true
	}

	return false
}

// SetChange gets a reference to the given float64 and assigns it to the Change field.
func (o *Screener) SetChange(v float64) {
	o.Change = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Screener) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Screener) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Screener) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Screener) SetDescription(v string) {
	o.Description = &v
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *Screener) GetDirection() string {
	if o == nil || IsNil(o.Direction) {
		var ret string
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Screener) GetDirectionOk() (*string, bool) {
	if o == nil || IsNil(o.Direction) {
		return nil, false
	}
	return o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *Screener) HasDirection() bool {
	if o != nil && !IsNil(o.Direction) {
		return true
	}

	return false
}

// SetDirection gets a reference to the given string and assigns it to the Direction field.
func (o *Screener) SetDirection(v string) {
	o.Direction = &v
}

// GetLast returns the Last field value if set, zero value otherwise.
func (o *Screener) GetLast() float64 {
	if o == nil || IsNil(o.Last) {
		var ret float64
		return ret
	}
	return *o.Last
}

// GetLastOk returns a tuple with the Last field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Screener) GetLastOk() (*float64, bool) {
	if o == nil || IsNil(o.Last) {
		return nil, false
	}
	return o.Last, true
}

// HasLast returns a boolean if a field has been set.
func (o *Screener) HasLast() bool {
	if o != nil && !IsNil(o.Last) {
		return true
	}

	return false
}

// SetLast gets a reference to the given float64 and assigns it to the Last field.
func (o *Screener) SetLast(v float64) {
	o.Last = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *Screener) GetSymbol() string {
	if o == nil || IsNil(o.Symbol) {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Screener) GetSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.Symbol) {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *Screener) HasSymbol() bool {
	if o != nil && !IsNil(o.Symbol) {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *Screener) SetSymbol(v string) {
	o.Symbol = &v
}

// GetTotalVolume returns the TotalVolume field value if set, zero value otherwise.
func (o *Screener) GetTotalVolume() int64 {
	if o == nil || IsNil(o.TotalVolume) {
		var ret int64
		return ret
	}
	return *o.TotalVolume
}

// GetTotalVolumeOk returns a tuple with the TotalVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Screener) GetTotalVolumeOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalVolume) {
		return nil, false
	}
	return o.TotalVolume, true
}

// HasTotalVolume returns a boolean if a field has been set.
func (o *Screener) HasTotalVolume() bool {
	if o != nil && !IsNil(o.TotalVolume) {
		return true
	}

	return false
}

// SetTotalVolume gets a reference to the given int64 and assigns it to the TotalVolume field.
func (o *Screener) SetTotalVolume(v int64) {
	o.TotalVolume = &v
}

func (o Screener) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Screener) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Change) {
		toSerialize["change"] = o.Change
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Direction) {
		toSerialize["direction"] = o.Direction
	}
	if !IsNil(o.Last) {
		toSerialize["last"] = o.Last
	}
	if !IsNil(o.Symbol) {
		toSerialize["symbol"] = o.Symbol
	}
	if !IsNil(o.TotalVolume) {
		toSerialize["totalVolume"] = o.TotalVolume
	}
	return toSerialize, nil
}

type NullableScreener struct {
	value *Screener
	isSet bool
}

func (v NullableScreener) Get() *Screener {
	return v.value
}

func (v *NullableScreener) Set(val *Screener) {
	v.value = val
	v.isSet = true
}

func (v NullableScreener) IsSet() bool {
	return v.isSet
}

func (v *NullableScreener) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScreener(val *Screener) *NullableScreener {
	return &NullableScreener{value: val, isSet: true}
}

func (v NullableScreener) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScreener) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



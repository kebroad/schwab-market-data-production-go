/*
Market Data

Trader API - Market data

API version: 1.0.0
Contact: TraderAPI@Schwab.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the MutualFundResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MutualFundResponse{}

// MutualFundResponse Quote info of MutualFund security
type MutualFundResponse struct {
	AssetMainType *AssetMainType `json:"assetMainType,omitempty"`
	AssetSubType NullableMutualFundAssetSubType `json:"assetSubType,omitempty"`
	// SSID of instrument
	Ssid *int64 `json:"ssid,omitempty"`
	// Symbol of instrument
	Symbol *string `json:"symbol,omitempty"`
	// is quote realtime
	Realtime *bool `json:"realtime,omitempty"`
	Fundamental *Fundamental `json:"fundamental,omitempty"`
	Quote *QuoteMutualFund `json:"quote,omitempty"`
	Reference *ReferenceMutualFund `json:"reference,omitempty"`
}

// NewMutualFundResponse instantiates a new MutualFundResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMutualFundResponse() *MutualFundResponse {
	this := MutualFundResponse{}
	return &this
}

// NewMutualFundResponseWithDefaults instantiates a new MutualFundResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMutualFundResponseWithDefaults() *MutualFundResponse {
	this := MutualFundResponse{}
	return &this
}

// GetAssetMainType returns the AssetMainType field value if set, zero value otherwise.
func (o *MutualFundResponse) GetAssetMainType() AssetMainType {
	if o == nil || IsNil(o.AssetMainType) {
		var ret AssetMainType
		return ret
	}
	return *o.AssetMainType
}

// GetAssetMainTypeOk returns a tuple with the AssetMainType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MutualFundResponse) GetAssetMainTypeOk() (*AssetMainType, bool) {
	if o == nil || IsNil(o.AssetMainType) {
		return nil, false
	}
	return o.AssetMainType, true
}

// HasAssetMainType returns a boolean if a field has been set.
func (o *MutualFundResponse) HasAssetMainType() bool {
	if o != nil && !IsNil(o.AssetMainType) {
		return true
	}

	return false
}

// SetAssetMainType gets a reference to the given AssetMainType and assigns it to the AssetMainType field.
func (o *MutualFundResponse) SetAssetMainType(v AssetMainType) {
	o.AssetMainType = &v
}

// GetAssetSubType returns the AssetSubType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MutualFundResponse) GetAssetSubType() MutualFundAssetSubType {
	if o == nil || IsNil(o.AssetSubType.Get()) {
		var ret MutualFundAssetSubType
		return ret
	}
	return *o.AssetSubType.Get()
}

// GetAssetSubTypeOk returns a tuple with the AssetSubType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MutualFundResponse) GetAssetSubTypeOk() (*MutualFundAssetSubType, bool) {
	if o == nil {
		return nil, false
	}
	return o.AssetSubType.Get(), o.AssetSubType.IsSet()
}

// HasAssetSubType returns a boolean if a field has been set.
func (o *MutualFundResponse) HasAssetSubType() bool {
	if o != nil && o.AssetSubType.IsSet() {
		return true
	}

	return false
}

// SetAssetSubType gets a reference to the given NullableMutualFundAssetSubType and assigns it to the AssetSubType field.
func (o *MutualFundResponse) SetAssetSubType(v MutualFundAssetSubType) {
	o.AssetSubType.Set(&v)
}
// SetAssetSubTypeNil sets the value for AssetSubType to be an explicit nil
func (o *MutualFundResponse) SetAssetSubTypeNil() {
	o.AssetSubType.Set(nil)
}

// UnsetAssetSubType ensures that no value is present for AssetSubType, not even an explicit nil
func (o *MutualFundResponse) UnsetAssetSubType() {
	o.AssetSubType.Unset()
}

// GetSsid returns the Ssid field value if set, zero value otherwise.
func (o *MutualFundResponse) GetSsid() int64 {
	if o == nil || IsNil(o.Ssid) {
		var ret int64
		return ret
	}
	return *o.Ssid
}

// GetSsidOk returns a tuple with the Ssid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MutualFundResponse) GetSsidOk() (*int64, bool) {
	if o == nil || IsNil(o.Ssid) {
		return nil, false
	}
	return o.Ssid, true
}

// HasSsid returns a boolean if a field has been set.
func (o *MutualFundResponse) HasSsid() bool {
	if o != nil && !IsNil(o.Ssid) {
		return true
	}

	return false
}

// SetSsid gets a reference to the given int64 and assigns it to the Ssid field.
func (o *MutualFundResponse) SetSsid(v int64) {
	o.Ssid = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *MutualFundResponse) GetSymbol() string {
	if o == nil || IsNil(o.Symbol) {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MutualFundResponse) GetSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.Symbol) {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *MutualFundResponse) HasSymbol() bool {
	if o != nil && !IsNil(o.Symbol) {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *MutualFundResponse) SetSymbol(v string) {
	o.Symbol = &v
}

// GetRealtime returns the Realtime field value if set, zero value otherwise.
func (o *MutualFundResponse) GetRealtime() bool {
	if o == nil || IsNil(o.Realtime) {
		var ret bool
		return ret
	}
	return *o.Realtime
}

// GetRealtimeOk returns a tuple with the Realtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MutualFundResponse) GetRealtimeOk() (*bool, bool) {
	if o == nil || IsNil(o.Realtime) {
		return nil, false
	}
	return o.Realtime, true
}

// HasRealtime returns a boolean if a field has been set.
func (o *MutualFundResponse) HasRealtime() bool {
	if o != nil && !IsNil(o.Realtime) {
		return true
	}

	return false
}

// SetRealtime gets a reference to the given bool and assigns it to the Realtime field.
func (o *MutualFundResponse) SetRealtime(v bool) {
	o.Realtime = &v
}

// GetFundamental returns the Fundamental field value if set, zero value otherwise.
func (o *MutualFundResponse) GetFundamental() Fundamental {
	if o == nil || IsNil(o.Fundamental) {
		var ret Fundamental
		return ret
	}
	return *o.Fundamental
}

// GetFundamentalOk returns a tuple with the Fundamental field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MutualFundResponse) GetFundamentalOk() (*Fundamental, bool) {
	if o == nil || IsNil(o.Fundamental) {
		return nil, false
	}
	return o.Fundamental, true
}

// HasFundamental returns a boolean if a field has been set.
func (o *MutualFundResponse) HasFundamental() bool {
	if o != nil && !IsNil(o.Fundamental) {
		return true
	}

	return false
}

// SetFundamental gets a reference to the given Fundamental and assigns it to the Fundamental field.
func (o *MutualFundResponse) SetFundamental(v Fundamental) {
	o.Fundamental = &v
}

// GetQuote returns the Quote field value if set, zero value otherwise.
func (o *MutualFundResponse) GetQuote() QuoteMutualFund {
	if o == nil || IsNil(o.Quote) {
		var ret QuoteMutualFund
		return ret
	}
	return *o.Quote
}

// GetQuoteOk returns a tuple with the Quote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MutualFundResponse) GetQuoteOk() (*QuoteMutualFund, bool) {
	if o == nil || IsNil(o.Quote) {
		return nil, false
	}
	return o.Quote, true
}

// HasQuote returns a boolean if a field has been set.
func (o *MutualFundResponse) HasQuote() bool {
	if o != nil && !IsNil(o.Quote) {
		return true
	}

	return false
}

// SetQuote gets a reference to the given QuoteMutualFund and assigns it to the Quote field.
func (o *MutualFundResponse) SetQuote(v QuoteMutualFund) {
	o.Quote = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *MutualFundResponse) GetReference() ReferenceMutualFund {
	if o == nil || IsNil(o.Reference) {
		var ret ReferenceMutualFund
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MutualFundResponse) GetReferenceOk() (*ReferenceMutualFund, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *MutualFundResponse) HasReference() bool {
	if o != nil && !IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given ReferenceMutualFund and assigns it to the Reference field.
func (o *MutualFundResponse) SetReference(v ReferenceMutualFund) {
	o.Reference = &v
}

func (o MutualFundResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MutualFundResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AssetMainType) {
		toSerialize["assetMainType"] = o.AssetMainType
	}
	if o.AssetSubType.IsSet() {
		toSerialize["assetSubType"] = o.AssetSubType.Get()
	}
	if !IsNil(o.Ssid) {
		toSerialize["ssid"] = o.Ssid
	}
	if !IsNil(o.Symbol) {
		toSerialize["symbol"] = o.Symbol
	}
	if !IsNil(o.Realtime) {
		toSerialize["realtime"] = o.Realtime
	}
	if !IsNil(o.Fundamental) {
		toSerialize["fundamental"] = o.Fundamental
	}
	if !IsNil(o.Quote) {
		toSerialize["quote"] = o.Quote
	}
	if !IsNil(o.Reference) {
		toSerialize["reference"] = o.Reference
	}
	return toSerialize, nil
}

type NullableMutualFundResponse struct {
	value *MutualFundResponse
	isSet bool
}

func (v NullableMutualFundResponse) Get() *MutualFundResponse {
	return v.value
}

func (v *NullableMutualFundResponse) Set(val *MutualFundResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMutualFundResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMutualFundResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMutualFundResponse(val *MutualFundResponse) *NullableMutualFundResponse {
	return &NullableMutualFundResponse{value: val, isSet: true}
}

func (v NullableMutualFundResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMutualFundResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


